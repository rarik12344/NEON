export default async function handler(req, res) {
  // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π URL
  const BASE_URL = "https://neon-xi.vercel.app";
  const imageUrl = `https://i.ibb.co/NdV9qyFh/NEONLOTTERY.jpg?t=${Date.now()}`;
  const postUrl = `${BASE_URL}/api/frame?t=${Date.now()}`;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç Frame
  const frameResponse = {
    type: 'frame',
    frame: {
      version: 'vNext',
      image: imageUrl,
      buttons: [
        {
          label: 'üé´ Participate',
          action: 'post_redirect'
        }
      ],
      postUrl: postUrl,
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      ogImage: imageUrl,
      accepts: {
        'x-frame-payload': true
      }
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞
  if (req.method === 'POST') {
    try {
      // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
      const body = typeof req.body === 'string' ? JSON.parse(req.body) : req.body;
      const buttonIndex = body?.untrustedData?.buttonIndex;
      
      if (buttonIndex === 1) {
        return res.status(200).json(frameResponse);
      }
    } catch (error) {
      console.error('Frame POST error:', error);
      return res.status(400).json({ error: 'Invalid request' });
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ GET-–∑–∞–ø—Ä–æ—Å–∞
  res.status(200).json(frameResponse);
}
